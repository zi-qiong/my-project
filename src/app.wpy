<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/explore',
      'pages/destination',
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#4abdcc',
      navigationBarTitleText: '面包旅行',
      navigationBarTextStyle: 'white'
    },
    "tabBar": {
    "color": "#b0b0b0",
    "selectedColor": "#4abdcc",
    "borderStyle": "white",
    "backgroundColor": "#fff",
    "list": [{
      "pagePath": "pages/index",
      "iconPath": "images/index_normal.png",
      "selectedIconPath": "images/index_pressed.png",
      "text": "推荐"
    }, {
      "pagePath": "pages/explore",
      "iconPath": "images/explore_normal.png",
      "selectedIconPath": "images/explore_pressed.png",
      "text": "发现"
    }]
  },
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
